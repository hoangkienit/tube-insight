{"ast":null,"code":"var _jsxFileName = \"/Users/kien/Desktop/projects/Web/tube-insight/client/src/pages/YoutubeForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './VideoAnalyzer.css';\nimport { AnalyzeVideo } from '../api/youtube.api';\nimport ToastNotification, { showTopToast } from '../components/toasts/toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst transcriptData = {\n  sentences: [{\n    text: \"Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US.\",\n    start: 250,\n    end: 6350,\n    confidence: 0.72412,\n    words: [{\n      confidence: 0.72412,\n      start: 250,\n      end: 650,\n      text: \"Smoke\",\n      speaker: null\n    }, {\n      confidence: 0.99996,\n      start: 730,\n      end: 1022,\n      text: \"from\",\n      speaker: null\n    }, {\n      confidence: 0.99992,\n      start: 1076,\n      end: 1466,\n      text: \"hundreds\",\n      speaker: null\n    }, {\n      confidence: 1,\n      start: 1498,\n      end: 1646,\n      text: \"of\",\n      speaker: null\n    }]\n  }, {\n    text: \"Skylines from Maine to Maryland to Minnesota are gray and smoggy.\",\n    start: 6500,\n    end: 11050,\n    confidence: 0.99819,\n    words: [{\n      confidence: 0.99819,\n      start: 6500,\n      end: 7306,\n      text: \"Skylines\",\n      speaker: null\n    }, {\n      confidence: 0.99987,\n      start: 7338,\n      end: 7534,\n      text: \"from\",\n      speaker: null\n    }, {\n      confidence: 0.9972,\n      start: 7572,\n      end: 7962,\n      text: \"Maine\",\n      speaker: null\n    }, {\n      confidence: 1,\n      start: 8026,\n      end: 8206,\n      text: \"to\",\n      speaker: null\n    }, {\n      confidence: 0.5192,\n      start: 8228,\n      end: 8650,\n      text: \"Maryland\",\n      speaker: null\n    }, {\n      confidence: 1,\n      start: 8730,\n      end: 8926,\n      text: \"to\",\n      speaker: null\n    }]\n  }]\n};\nexport const VideoAnalyzer = () => {\n  _s();\n  const [url, setUrl] = useState('');\n  const [video, setVideo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleAnalyze = async () => {\n    if (!url) return;\n    setLoading(true);\n    try {\n      const res = await AnalyzeVideo(url);\n      if (res.success) {\n        setVideo(res.data);\n      }\n    } catch (error) {\n      showTopToast(error.message, \"error\", 5000);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analyzer-container\",\n    children: [/*#__PURE__*/_jsxDEV(ToastNotification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"analyzer-title\",\n      children: \"YouTube Video Analyzer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analyzer-input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"analyzer-input\",\n        placeholder: \"Paste YouTube URL here...\",\n        value: url,\n        onChange: e => setUrl(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"analyzer-button\",\n        onClick: handleAnalyze,\n        disabled: loading,\n        children: loading ? 'Analyzing...' : 'Analyze'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), video && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analyzer-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:5000/thumbnails/${video.thumbnailPath.split('/').pop()}.png`,\n        alt: \"Thumbnail\",\n        className: \"analyzer-thumbnail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analyzer-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"analyzer-video-title\",\n          children: video.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"analyzer-channel\",\n          children: [\"Channel: \", video.channelName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"analyzer-duration\",\n          children: [\"Duration: \", video.duration]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"transcript-title\",\n      children: \"Transcript\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), transcriptData.sentences.map((sentence, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transcript-sentence\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcript-sentence-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"transcript-sentence-label\",\n          children: [\"Sentence \", index + 1, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"transcript-confidence\",\n          children: [\"Confidence: \", sentence.confidence.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"transcript-text\",\n        children: sentence.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"transcript-word-list\",\n        children: sentence.words.map((word, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `transcript-word ${word.confidence < 0.6 ? \"transcript-word-low\" : \"\"}`,\n          children: [\"\\\"\", word.text, \"\\\" \\u2014 confidence: \", word.confidence.toFixed(2), \", start: \", word.start, \", end: \", word.end]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(VideoAnalyzer, \"7YW+q7FkF+YPwpSEUKW1i57Cc0I=\");\n_c = VideoAnalyzer;\nexport default VideoAnalyzer;\nvar _c;\n$RefreshReg$(_c, \"VideoAnalyzer\");","map":{"version":3,"names":["React","useState","AnalyzeVideo","ToastNotification","showTopToast","jsxDEV","_jsxDEV","transcriptData","sentences","text","start","end","confidence","words","speaker","VideoAnalyzer","_s","url","setUrl","video","setVideo","loading","setLoading","handleAnalyze","res","success","data","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","src","thumbnailPath","split","pop","alt","title","channelName","duration","map","sentence","index","toFixed","word","i","_c","$RefreshReg$"],"sources":["/Users/kien/Desktop/projects/Web/tube-insight/client/src/pages/YoutubeForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './VideoAnalyzer.css';\nimport { AnalyzeVideo } from '../api/youtube.api';\nimport ToastNotification, { showTopToast } from '../components/toasts/toast';\n\ninterface VideoData {\n    thumbnailPath: string;\n    title: string;\n    channelName: string;\n    duration: string;\n}\n\nconst transcriptData = {\n  sentences: [\n    {\n      text: \"Smoke from hundreds of wildfires in Canada is triggering air quality alerts throughout the US.\",\n      start: 250,\n      end: 6350,\n      confidence: 0.72412,\n      words: [\n        { confidence: 0.72412, start: 250, end: 650, text: \"Smoke\", speaker: null },\n        { confidence: 0.99996, start: 730, end: 1022, text: \"from\", speaker: null },\n        { confidence: 0.99992, start: 1076, end: 1466, text: \"hundreds\", speaker: null },\n        { confidence: 1, start: 1498, end: 1646, text: \"of\", speaker: null }\n      ]\n    },\n    {\n      text: \"Skylines from Maine to Maryland to Minnesota are gray and smoggy.\",\n      start: 6500,\n      end: 11050,\n      confidence: 0.99819,\n      words: [\n        { confidence: 0.99819, start: 6500, end: 7306, text: \"Skylines\", speaker: null },\n        { confidence: 0.99987, start: 7338, end: 7534, text: \"from\", speaker: null },\n        { confidence: 0.9972, start: 7572, end: 7962, text: \"Maine\", speaker: null },\n        { confidence: 1, start: 8026, end: 8206, text: \"to\", speaker: null },\n        { confidence: 0.5192, start: 8228, end: 8650, text: \"Maryland\", speaker: null },\n        { confidence: 1, start: 8730, end: 8926, text: \"to\", speaker: null }\n      ]\n    }\n  ]\n};\n\nexport const VideoAnalyzer: React.FC = () => {\n    const [url, setUrl] = useState('');\n    const [video, setVideo] = useState<VideoData | null>(null);\n    const [loading, setLoading] = useState(false);\n\n    const handleAnalyze = async () => {\n        if (!url) return;\n        setLoading(true);\n        try {\n            const res = await AnalyzeVideo(url);\n\n            if (res.success) {\n                setVideo(res.data);\n            }\n        } catch (error: any) {\n            showTopToast(error.message, \"error\", 5000);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"analyzer-container\">\n            <ToastNotification/>\n            <h1 className=\"analyzer-title\">YouTube Video Analyzer</h1>\n            <div className=\"analyzer-input-group\">\n                <input\n                    type=\"text\"\n                    className=\"analyzer-input\"\n                    placeholder=\"Paste YouTube URL here...\"\n                    value={url}\n                    onChange={(e) => setUrl(e.target.value)}\n                />\n                <button className=\"analyzer-button\" onClick={handleAnalyze} disabled={loading}>\n                    {loading ? 'Analyzing...' : 'Analyze'}\n                </button>\n            </div>\n\n            {video && (\n                <div className=\"analyzer-card\">\n                    <img src={`http://localhost:5000/thumbnails/${video.thumbnailPath.split('/').pop()}.png`} alt=\"Thumbnail\" className=\"analyzer-thumbnail\" />\n                    <div className=\"analyzer-details\">\n                        <h2 className=\"analyzer-video-title\">{video.title}</h2>\n                        <p className=\"analyzer-channel\">Channel: {video.channelName}</p>\n                        <p className=\"analyzer-duration\">Duration: {video.duration}</p>\n                    </div>\n                </div>\n            )}\n\n            <h2 className=\"transcript-title\">Transcript</h2>\n      {transcriptData.sentences.map((sentence, index) => (\n        <div key={index} className=\"transcript-sentence\">\n          <div className=\"transcript-sentence-header\">\n            <span className=\"transcript-sentence-label\">Sentence {index + 1}:</span>\n            <span className=\"transcript-confidence\">Confidence: {sentence.confidence.toFixed(2)}</span>\n          </div>\n          <p className=\"transcript-text\">{sentence.text}</p>\n          <ul className=\"transcript-word-list\">\n            {sentence.words.map((word, i) => (\n              <li\n                key={i}\n                className={`transcript-word ${\n                  word.confidence < 0.6 ? \"transcript-word-low\" : \"\"\n                }`}\n              >\n                \"{word.text}\" — confidence: {word.confidence.toFixed(2)}, start: {word.start}, end: {word.end}\n              </li>\n            ))}\n          </ul>\n        </div>\n      ))}\n        </div>\n    );\n};\n\nexport default VideoAnalyzer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}