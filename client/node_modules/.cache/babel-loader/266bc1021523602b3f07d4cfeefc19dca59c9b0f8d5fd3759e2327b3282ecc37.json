{"ast":null,"code":"export const downloadJson=function(data){let filename=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"data.json\";const jsonString=JSON.stringify(data,null,2);// pretty print\nconst blob=new Blob([jsonString],{type:\"application/json\"});const url=URL.createObjectURL(blob);const link=document.createElement(\"a\");link.href=url;link.download=filename;link.click();URL.revokeObjectURL(url);};","map":{"version":3,"names":["downloadJson","data","filename","arguments","length","undefined","jsonString","JSON","stringify","blob","Blob","type","url","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL"],"sources":["/Users/kien/Desktop/projects/Web/tube-insight/client/src/utils/downloadFile.ts"],"sourcesContent":["import { VideoData } from \"../interfaces/youtube.interface\";\n\nexport const downloadJson = (data: VideoData, filename = \"data.json\") => {\n  const jsonString = JSON.stringify(data, null, 2); // pretty print\n  const blob = new Blob([jsonString], { type: \"application/json\" });\n  const url = URL.createObjectURL(blob);\n\n  const link = document.createElement(\"a\");\n  link.href = url;\n  link.download = filename;\n  link.click();\n\n  URL.revokeObjectURL(url);\n};\n"],"mappings":"AAEA,MAAO,MAAM,CAAAA,YAAY,CAAG,QAAAA,CAACC,IAAe,CAA6B,IAA3B,CAAAC,QAAQ,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,WAAW,CAClE,KAAM,CAAAG,UAAU,CAAGC,IAAI,CAACC,SAAS,CAACP,IAAI,CAAE,IAAI,CAAE,CAAC,CAAC,CAAE;AAClD,KAAM,CAAAQ,IAAI,CAAG,GAAI,CAAAC,IAAI,CAAC,CAACJ,UAAU,CAAC,CAAE,CAAEK,IAAI,CAAE,kBAAmB,CAAC,CAAC,CACjE,KAAM,CAAAC,GAAG,CAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC,CAErC,KAAM,CAAAM,IAAI,CAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC,CACxCF,IAAI,CAACG,IAAI,CAAGN,GAAG,CACfG,IAAI,CAACI,QAAQ,CAAGjB,QAAQ,CACxBa,IAAI,CAACK,KAAK,CAAC,CAAC,CAEZP,GAAG,CAACQ,eAAe,CAACT,GAAG,CAAC,CAC1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}