{"ast":null,"code":"var _jsxFileName = \"/Users/kien/Desktop/projects/Web/tube-insight/client/src/pages/YoutubeForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './VideoAnalyzer.css';\nimport { AnalyzeVideo } from '../api/youtube.api';\nimport ToastNotification, { showTopToast } from '../components/toasts/toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const VideoAnalyzer = () => {\n  _s();\n  const [url, setUrl] = useState('');\n  const [video, setVideo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleAnalyze = async () => {\n    if (!url) return;\n    setLoading(true);\n    try {\n      const res = await AnalyzeVideo(url);\n      if (res.success) {\n        setVideo(res.data);\n      }\n    } catch (error) {\n      showTopToast(error.message, \"error\", 5000);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analyzer-container\",\n    children: [/*#__PURE__*/_jsxDEV(ToastNotification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"analyzer-title\",\n      children: \"YouTube Video Analyzer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analyzer-input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"analyzer-input\",\n        placeholder: \"Paste YouTube URL here...\",\n        value: url,\n        onChange: e => setUrl(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"analyzer-button\",\n        onClick: handleAnalyze,\n        disabled: loading,\n        children: loading ? 'Analyzing...' : 'Analyze'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), video && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analyzer-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:5000/thumbnails/${video.thumbnailPath.split('/').pop()}.png`,\n        alt: \"Thumbnail\",\n        className: \"analyzer-thumbnail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analyzer-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"analyzer-video-title\",\n          children: video.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"analyzer-channel\",\n          children: [\"Channel: \", video.channelName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"analyzer-duration\",\n          children: [\"Duration: \", video.duration]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"transcript-title\",\n      children: \"Transcript\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), transcriptData.sentences.map((sentence, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transcript-sentence\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcript-sentence-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"transcript-sentence-label\",\n          children: [\"Sentence \", index + 1, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"transcript-confidence\",\n          children: [\"Confidence: \", sentence.confidence.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"transcript-text\",\n        children: sentence.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"transcript-word-list\",\n        children: sentence.words.map((word, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `transcript-word ${word.confidence < 0.6 ? \"transcript-word-low\" : \"\"}`,\n          children: [\"\\\"\", word.text, \"\\\" \\u2014 confidence: \", word.confidence.toFixed(2), \", start: \", word.start, \", end: \", word.end]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(VideoAnalyzer, \"7YW+q7FkF+YPwpSEUKW1i57Cc0I=\");\n_c = VideoAnalyzer;\nexport default VideoAnalyzer;\nvar _c;\n$RefreshReg$(_c, \"VideoAnalyzer\");","map":{"version":3,"names":["React","useState","AnalyzeVideo","ToastNotification","showTopToast","jsxDEV","_jsxDEV","VideoAnalyzer","_s","url","setUrl","video","setVideo","loading","setLoading","handleAnalyze","res","success","data","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","src","thumbnailPath","split","pop","alt","title","channelName","duration","transcriptData","sentences","map","sentence","index","confidence","toFixed","text","words","word","i","start","end","_c","$RefreshReg$"],"sources":["/Users/kien/Desktop/projects/Web/tube-insight/client/src/pages/YoutubeForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './VideoAnalyzer.css';\nimport { AnalyzeVideo } from '../api/youtube.api';\nimport ToastNotification, { showTopToast } from '../components/toasts/toast';\n\nexport const VideoAnalyzer: React.FC = () => {\n    const [url, setUrl] = useState('');\n    const [video, setVideo] = useState<VideoData | null>(null);\n    const [loading, setLoading] = useState(false);\n\n    const handleAnalyze = async () => {\n        if (!url) return;\n        setLoading(true);\n        try {\n            const res = await AnalyzeVideo(url);\n\n            if (res.success) {\n                setVideo(res.data);\n            }\n        } catch (error: any) {\n            showTopToast(error.message, \"error\", 5000);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"analyzer-container\">\n            <ToastNotification />\n            <h1 className=\"analyzer-title\">YouTube Video Analyzer</h1>\n            <div className=\"analyzer-input-group\">\n                <input\n                    type=\"text\"\n                    className=\"analyzer-input\"\n                    placeholder=\"Paste YouTube URL here...\"\n                    value={url}\n                    onChange={(e) => setUrl(e.target.value)}\n                />\n                <button className=\"analyzer-button\" onClick={handleAnalyze} disabled={loading}>\n                    {loading ? 'Analyzing...' : 'Analyze'}\n                </button>\n            </div>\n\n            {video && (\n                <div className=\"analyzer-card\">\n                    <img src={`http://localhost:5000/thumbnails/${video.thumbnailPath.split('/').pop()}.png`} alt=\"Thumbnail\" className=\"analyzer-thumbnail\" />\n                    <div className=\"analyzer-details\">\n                        <h2 className=\"analyzer-video-title\">{video.title}</h2>\n                        <p className=\"analyzer-channel\">Channel: {video.channelName}</p>\n                        <p className=\"analyzer-duration\">Duration: {video.duration}</p>\n                    </div>\n                </div>\n            )}\n\n            <h2 className=\"transcript-title\">Transcript</h2>\n            {transcriptData.sentences.map((sentence, index) => (\n                <div key={index} className=\"transcript-sentence\">\n                    <div className=\"transcript-sentence-header\">\n                        <span className=\"transcript-sentence-label\">Sentence {index + 1}:</span>\n                        <span className=\"transcript-confidence\">Confidence: {sentence.confidence.toFixed(2)}</span>\n                    </div>\n                    <p className=\"transcript-text\">{sentence.text}</p>\n                    <ul className=\"transcript-word-list\">\n                        {sentence.words.map((word, i) => (\n                            <li\n                                key={i}\n                                className={`transcript-word ${word.confidence < 0.6 ? \"transcript-word-low\" : \"\"\n                                    }`}\n                            >\n                                \"{word.text}\" — confidence: {word.confidence.toFixed(2)}, start: {word.start}, end: {word.end}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default VideoAnalyzer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}