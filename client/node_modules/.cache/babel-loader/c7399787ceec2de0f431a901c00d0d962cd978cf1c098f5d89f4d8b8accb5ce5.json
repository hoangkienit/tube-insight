{"ast":null,"code":"var _jsxFileName = \"/Users/kien/Desktop/projects/Web/tube-insight/client/src/pages/YoutubeForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './VideoAnalyzer.css';\nimport { AnalyzeVideo } from '../api/youtube.api';\nimport ToastNotification, { showTopToast } from '../components/toasts/toast';\nimport { downloadJson } from '../utils/downloadFile';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const VideoAnalyzer = () => {\n  _s();\n  const [url, setUrl] = useState('');\n  const [video, setVideo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleAnalyze = async () => {\n    if (!url) return;\n    setLoading(true);\n    try {\n      const res = await AnalyzeVideo(url);\n      if (res.success) {\n        console.log(res.data);\n        setVideo(res.data);\n      }\n    } catch (error) {\n      showTopToast(error.message, \"error\", 5000);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDownloadJson = data => {\n    downloadJson(data, \"transcript.json\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analyzer-container\",\n    children: [/*#__PURE__*/_jsxDEV(ToastNotification, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"analyzer-title\",\n      children: \"YouTube Video Analyzer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analyzer-input-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"analyzer-input\",\n        placeholder: \"Paste YouTube URL here...\",\n        value: url,\n        onChange: e => setUrl(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"analyzer-button\",\n        onClick: handleAnalyze,\n        disabled: loading,\n        children: loading ? 'Analyzing...' : 'Analyze'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), video && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"analyzer-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:5000/thumbnails/${video.thumbnailPath.split('/').pop()}.png`,\n        alt: \"Thumbnail\",\n        className: \"analyzer-thumbnail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"analyzer-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"analyzer-video-title\",\n          children: video.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"analyzer-channel\",\n          children: [\"Channel: \", video.channelName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"analyzer-duration\",\n          children: [\"Duration: \", video.duration]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this), video && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\",\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"analyzer-button download-button\",\n        onClick: () => handleDownloadJson(video),\n        children: \"Download Transcript as JSON\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), video === null || video === void 0 ? void 0 : video.sentences.sentences.map((sentence, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"transcript-title\",\n        children: \"Transcript\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transcript-sentence\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"transcript-sentence-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"transcript-sentence-label\",\n            children: [\"Sentence \", index + 1, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"transcript-confidence\",\n            children: [\"Confidence: \", sentence.confidence.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"transcript-confidence\",\n            children: [\"AI Probability: \", sentence.ai_probability.toFixed(10)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"transcript-text\",\n          children: sentence.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"transcript-word-list\",\n          children: sentence.words.map((word, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `transcript-word ${word.confidence < 0.6 ? \"transcript-word-low\" : \"\"}`,\n            children: [\"\\\"\", word.text, \"\\\" \\u2014 confidence: \", word.confidence.toFixed(2), \", start: \", word.start, \", end: \", word.end]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(VideoAnalyzer, \"7YW+q7FkF+YPwpSEUKW1i57Cc0I=\");\n_c = VideoAnalyzer;\nexport default VideoAnalyzer;\nvar _c;\n$RefreshReg$(_c, \"VideoAnalyzer\");","map":{"version":3,"names":["React","useState","AnalyzeVideo","ToastNotification","showTopToast","downloadJson","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoAnalyzer","_s","url","setUrl","video","setVideo","loading","setLoading","handleAnalyze","res","success","console","log","data","error","message","handleDownloadJson","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","disabled","src","thumbnailPath","split","pop","alt","title","channelName","duration","style","textAlign","marginBottom","sentences","map","sentence","index","confidence","toFixed","ai_probability","text","words","word","i","start","end","_c","$RefreshReg$"],"sources":["/Users/kien/Desktop/projects/Web/tube-insight/client/src/pages/YoutubeForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './VideoAnalyzer.css';\nimport { AnalyzeVideo } from '../api/youtube.api';\nimport ToastNotification, { showTopToast } from '../components/toasts/toast';\nimport { VideoData } from '../interfaces/youtube.interface';\nimport { downloadJson } from '../utils/downloadFile';\n\nexport const VideoAnalyzer: React.FC = () => {\n    const [url, setUrl] = useState('');\n    const [video, setVideo] = useState<VideoData | null>(null);\n    const [loading, setLoading] = useState(false);\n\n    const handleAnalyze = async () => {\n        if (!url) return;\n        setLoading(true);\n        try {\n            const res = await AnalyzeVideo(url);\n\n            if (res.success) {\n                console.log(res.data);\n                setVideo(res.data);\n            }\n        } catch (error: any) {\n            showTopToast(error.message, \"error\", 5000);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleDownloadJson = (data: VideoData) => {\n        downloadJson(data, \"transcript.json\");\n    }\n\n    return (\n        <div className=\"analyzer-container\">\n            <ToastNotification />\n            <h1 className=\"analyzer-title\">YouTube Video Analyzer</h1>\n            <div className=\"analyzer-input-group\">\n                <input\n                    type=\"text\"\n                    className=\"analyzer-input\"\n                    placeholder=\"Paste YouTube URL here...\"\n                    value={url}\n                    onChange={(e) => setUrl(e.target.value)}\n                />\n                <button className=\"analyzer-button\" onClick={handleAnalyze} disabled={loading}>\n                    {loading ? 'Analyzing...' : 'Analyze'}\n                </button>\n            </div>\n\n            {video && (\n                <div className=\"analyzer-card\">\n                    <img src={`http://localhost:5000/thumbnails/${video.thumbnailPath.split('/').pop()}.png`} alt=\"Thumbnail\" className=\"analyzer-thumbnail\" />\n                    <div className=\"analyzer-details\">\n                        <h2 className=\"analyzer-video-title\">{video.title}</h2>\n                        <p className=\"analyzer-channel\">Channel: {video.channelName}</p>\n                        <p className=\"analyzer-duration\">Duration: {video.duration}</p>\n                    </div>\n                </div>\n            )}\n\n            {video && (\n                <div style={{ textAlign: \"center\", marginBottom: \"20px\" }}>\n                    <button\n                        className=\"analyzer-button download-button\"\n                        onClick={() => handleDownloadJson(video)}\n                    >\n                        Download Transcript as JSON\n                    </button>\n                </div>\n            )}\n\n            {video?.sentences.sentences.map((sentence, index) => (\n                <>\n                <h2 className=\"transcript-title\">Transcript</h2>\n                <div key={index} className=\"transcript-sentence\">\n                    <div className=\"transcript-sentence-header\">\n                        <span className=\"transcript-sentence-label\">Sentence {index + 1}:</span>\n                        <span className=\"transcript-confidence\">Confidence: {sentence.confidence.toFixed(2)}</span>\n                        <span className=\"transcript-confidence\">AI Probability: {sentence.ai_probability.toFixed(10)}</span>\n                    </div>\n                    <p className=\"transcript-text\">{sentence.text}</p>\n                    <ul className=\"transcript-word-list\">\n                        {sentence.words.map((word, i) => (\n                            <li\n                                key={i}\n                                className={`transcript-word ${word.confidence < 0.6 ? \"transcript-word-low\" : \"\"\n                                    }`}\n                            >\n                                \"{word.text}\" — confidence: {word.confidence.toFixed(2)}, start: {word.start}, end: {word.end}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n                </>\n            ))}\n        </div>\n    );\n};\n\nexport default VideoAnalyzer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}